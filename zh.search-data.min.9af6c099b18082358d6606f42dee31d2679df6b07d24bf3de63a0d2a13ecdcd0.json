[{"id":0,"href":"/zh/docs/novels/%E6%89%93%E8%8D%89%E7%AC%BC/","title":"打草笼","section":"Novels","content":" 小说名：打草笼 # 简介 # 这是一篇没有人性的故事，是魔幻现实主义之作\n前言 # 本人从小就喜欢看小说，尤其是武侠和灵异类的。但好像这些小说对人的影响很大，尤其是对很多普通人。在网络越来越发达的今天，普通人的思维却依然固化，一些奇奇怪怪的话语也更容易出现在眼前，导致我深思这种题材到底能带来什么，以及如何写才能正确表达自己想要的东西。这本书最初也是武侠灵异类型，在一番考虑之后，决定重新写一本。本人此前还从未写过小说甚至没有任何文字工作的经验，对于自己是否能把控好这种题材也十分担忧。\n楔子 # 自古以来，善恶报应，因果循环可谓不绝于书。有三世报应之说，但福荫三代之事也不胜枚举，可福不过三代，祸不及子孙，所谓风水轮流转，即土雍山崩，山川异形等地理变化，导致的失势与得势。尤其是险峻的地势更容易导致能量的聚集和不稳定，这些地方往往能藏风聚气，也容易出现异常的自然地理灾害。\n古人则将其总结为风水，并衍生了一系列理论，在各类建筑上应用，其中以阴宅最为考究。堪舆师根据山川走势寻找地气结穴之所，也就是大地磁场交汇之处。范围通常只有丈许方圆，那里的地气最为充盈，磁场能量异常强烈，为墓穴则可以造福于后人。\n故事发生一个江水环绕的小城，位于三省交界，襟江带湖，地势险要。传言发生过一场奇灾浩劫，那年旱灾饥荒，稻田龟裂，作物枯死，庄稼颗粒无收。百姓山穷水尽，颠沛流离，其苦不堪言状。方圆千里赤地，生灵涂炭，连树皮草根也被人吃尽，走投无路的人被观音土活活胀死，有的狠下心来易子而食。\n社会千疮百孔，秩序混乱，人性的恶被展现的淋漓尽致。壮劳力沦为盗匪，残害乡里；灾民饥则掠人食，搞得人心惶惶。郊外饿殍遍野，沦为野狗餐食，实在惨不忍睹；街道上萧条荒凉，百业凋敝，妇孺老人浑身浮肿，奄奄一息，人鬼难辨。县城里死气沉沉，宛如人间炼狱。而乡贤孝廉却妖言惑众，紧锣密鼓地筹办赛神会祈雨，雪上加霜！天灾人祸似乎都发生在这个地理形势异常险要而奇突的地方上。\n人世沧桑，风云变幻，又如何在这乱世之中，寻得一线生机？\n本故事纯属虚构"},{"id":1,"href":"/zh/posts/kernel-submitting-patches/","title":"向kernel提交patch","section":"博客","content":"过了这么长时间一直没有发布任何文章，也不知道写些什么好，其实博客和小说写了很多内容，但是自己总觉得还没写好，唉！但凡能崩出个屁来，也不至于这样啊！！！\n今天就简单介绍一下如何向Linux内核提交patch\n拉取代码 # 安装git # apt install git git-email git config --global user.name \u0026quot;John Doe\u0026quot; git config --global user.email johndoe@example.com 配置邮箱 # vim ~/.gitconfig，去对应邮箱拿smtp授权\n[sendemail] smtpEncryption = tls smtpServer = smtp.gmail.com smtpUser = yourname@gmail.com smtpServerPort = 587 拉主支代码 # git clone https://git.kernel.org/pub/scm/linux/kernel/git/torvalds/linux.git 拉取分支 # 大多数子系统Maintainer都有自己的树，可以在MAINTAINERS文件中，找到相应的Maintainer及其git地址\ncd linux git remote add linux-next https://git.kernel.org/pub/scm/linux/kernel/git/next/linux-next.git git fetch --tags linux-next git checkout -b mydev next-**** 任何要合并到linux主线的代码都会首先合并到next中，所以咱们先基于next分支修改\n查看tags # git tag -l \u0026quot;next-*\u0026quot; | tail 定期更新代码 # git checkout master git remote update 订阅邮件列表 # 如果对某个子系统感兴趣，或想参与讨论，可以去订阅邮件列表🔗，但一定注意网络礼仪🔗和邮件格式\n邮件列表的存档🔗\n编译 # 生成文档 # make htmldocs 也可以使用在线文档，入门先把Development process里面的内容大致看一遍\n生成配置 # make ARCH=x86_64 allyesconfig 编译 # make -j4 ARCH=x86_64 EXTRA_CFLAGS=\u0026quot;-Wmissing-declarations -Wmissing-prototypes\u0026quot; 生成其他平台，在后面加上对应的交叉编译工具链\nCROSS_COMPILE=toolchain_path 维护 # 维护大致分成\ncoding-style warnning bug-fix 🔗 feature 首先要熟悉kernel编程规范:🔗\n咱们刚入门就从文档注释，编码格式和消除警告入手，也可以更好的了解整个工作流程\n如果你什么都不懂，就可以先看看Linux内核新手计划🔗\n如果你想加入内核开发社区并协助完成一些任务，可以访问 “Linux内核房管员”计划🔗\n制作补丁 # git format-patch -s -1 在提交之前，使用checkpatch.pl检查补丁是否违规，格式规则具体参考：🔗\n./scripts/checkpatch.pl 0001-* 达到 0 errors, 0 warnings， 就可以准备将它发送给Maintainer了\n发送邮件，等待回复 # 用get_maintainer.pl来查看对应模块的Maintainer\n./scripts/get_maintainer.pl 0001-* 发送邮件前可以先用自己邮箱试一试，确认无误后，再向Maintainer邮箱发送即可，\ngit send-email 0001-* --to 收件人邮箱 --cc 抄送人邮箱 "}]